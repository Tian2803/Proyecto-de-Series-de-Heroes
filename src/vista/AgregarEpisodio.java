/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import archivo.*;
import archivo.LeerManipulaPro;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import logica.*;

/**
 *
 * @author Sebastian Burgos
 */
public class AgregarEpisodio extends javax.swing.JFrame {
    
    private ArrayList <Heroe> listSuperHeroes;
    private ManipulaSerie manipulador;
    /**
     * Creates new form AgregarEpisodio
     */
    public AgregarEpisodio() {
        //Evita que se pueda maximizar la pestaña 
        this.setResizable(false);
        initComponents();
        this.txtNombreEpisodio.setEnabled(false);
        this.cboxEpisodiosAgregarPersonaje.setEnabled(false);
        llenarComboBox();
    }
    
    private void llenarComboBox(){
        manipulador = new ManipulaSerie();
        LeerManipulaPro lector = new LeerManipulaPro();
        try{
            if (lector.abrirArchivo()) {
                //Se lee el objeto y se asigna al atributo de la clase VentanaPrincipal.
                manipulador = (ManipulaSerie)lector.leerArchivo();
                //Se cierra la conexión.
                lector.cerrarArchivo();
            }
        }
        catch(Exception e){ 
            System.err.println("Error en leer archivo series");
        }  
        
        this.listSuperHeroes = new ArrayList<>();
        LeerArchivoHeroe lector2 = new LeerArchivoHeroe();
        try{
            if (lector2.abrirArchivo()) {
                //Se lee el objeto y se asigna al atributo de la clase VentanaPrincipal.
                listSuperHeroes = (ArrayList<Heroe>)lector2.leerArchivo();
                //Se cierra la conexión.
                lector2.cerrarArchivo();
            }
        }
        catch(Exception e){ 
            System.err.println("Error en leer archivo Heroe");
        } 
        
        for(Serie seriea: manipulador.getSeries()){
            if(seriea!=null){
                this.cboxListaSeries.addItem(seriea.getNombreSerie());
            }                
        }
        String nombreHeroe;
        for(Heroe heroe: listSuperHeroes){
            nombreHeroe = heroe.getNombre();
            if(nombreHeroe!=null){
                this.cboxSuperheroe.addItem(nombreHeroe);
            }                
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombreEpisodio = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnRegistrarEpisodio = new javax.swing.JButton();
        cboxListaSeries = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPersonajesEnEpisodio = new javax.swing.JTextArea();
        cboxSuperheroe = new javax.swing.JComboBox<>();
        cboxVillano = new javax.swing.JComboBox<>();
        btnAgregarPersonajes = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cboxEpisodiosAgregarPersonaje = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        listEpisodiosEnSerie = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(187, 198, 220));
        jPanel1.setMinimumSize(new java.awt.Dimension(610, 310));
        jPanel1.setPreferredSize(new java.awt.Dimension(610, 310));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Agregar Episodio");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        txtNombreEpisodio.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtNombreEpisodio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreEpisodioActionPerformed(evt);
            }
        });

        jLabel3.setLabelFor(txtNombreEpisodio);
        jLabel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nombre del episodio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        btnRegistrarEpisodio.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnRegistrarEpisodio.setText("REGISTRAR EPISODIO");
        btnRegistrarEpisodio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRegistrarEpisodio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarEpisodioActionPerformed(evt);
            }
        });

        cboxListaSeries.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        cboxListaSeries.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        cboxListaSeries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxListaSeriesActionPerformed(evt);
            }
        });

        jLabel4.setLabelFor(cboxListaSeries);
        jLabel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Seleccione serie", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(187, 198, 220));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar personaje a episodio", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPersonajesEnEpisodio.setColumns(20);
        txtPersonajesEnEpisodio.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtPersonajesEnEpisodio.setLineWrap(true);
        txtPersonajesEnEpisodio.setRows(5);
        txtPersonajesEnEpisodio.setEnabled(false);
        jScrollPane1.setViewportView(txtPersonajesEnEpisodio);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 180, 180));

        cboxSuperheroe.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        cboxSuperheroe.setMaximumRowCount(6);
        cboxSuperheroe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        cboxSuperheroe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxSuperheroeActionPerformed(evt);
            }
        });
        jPanel2.add(cboxSuperheroe, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, 210, 30));

        cboxVillano.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        cboxVillano.setMaximumRowCount(6);
        cboxVillano.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        cboxVillano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxVillanoActionPerformed(evt);
            }
        });
        jPanel2.add(cboxVillano, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 210, 30));

        btnAgregarPersonajes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAgregarPersonajes.setText("AGREGAR\n");
        btnAgregarPersonajes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAgregarPersonajes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPersonajesActionPerformed(evt);
            }
        });
        jPanel2.add(btnAgregarPersonajes, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, 130, 40));

        jLabel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Superheroe", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 230, 60));

        jLabel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Villano", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13))); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 230, 60));

        jLabel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personajes del episodio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13))); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 200, 210));

        cboxEpisodiosAgregarPersonaje.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboxEpisodiosAgregarPersonaje.setMaximumRowCount(6);
        cboxEpisodiosAgregarPersonaje.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        cboxEpisodiosAgregarPersonaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxEpisodiosAgregarPersonajeActionPerformed(evt);
            }
        });
        jPanel2.add(cboxEpisodiosAgregarPersonaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 340, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Seleccione episodio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13))); // NOI18N
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 360, 60));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jScrollPane2.setViewportView(listEpisodiosEnSerie);

        jLabel7.setLabelFor(listEpisodiosEnSerie);
        jLabel7.setToolTipText("");
        jLabel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Episodios en esta serie"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(cboxListaSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txtNombreEpisodio, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnRegistrarEpisodio, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(cboxListaSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(txtNombreEpisodio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addComponent(btnRegistrarEpisodio, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 795, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreEpisodioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreEpisodioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreEpisodioActionPerformed

    private void cboxListaSeriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxListaSeriesActionPerformed
        if(this.cboxListaSeries.getSelectedIndex()!=0){
            this.cboxEpisodiosAgregarPersonaje.setEnabled(true);
            this.txtNombreEpisodio.setEnabled(true);
            llenarComboBoxCargarPersonajes(this.cboxListaSeries.getSelectedIndex()-1);
            recargarEpisodios(this.cboxListaSeries.getSelectedIndex()-1);
        }
    }//GEN-LAST:event_cboxListaSeriesActionPerformed

    private void btnRegistrarEpisodioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarEpisodioActionPerformed
        int posicion;
        String nombre = this.txtNombreEpisodio.getText();
        Episodio episodioEntrada = null;
        if(!nombre.equals("")){
            posicion = this.cboxListaSeries.getSelectedIndex()-1;
            recargarEpisodios(posicion);
            episodioEntrada = new Episodio(this.txtNombreEpisodio.getText());
            String tituloSerie = manipulador.getSeries().get(posicion).getNombreSerie();
            if(manipulador.agregarEpisodio(tituloSerie,episodioEntrada)){
                escribirArchivoSeries();            
                JOptionPane.showMessageDialog(null, "Episodio guardado con exito","Operacion Exitosa",JOptionPane.INFORMATION_MESSAGE); 
                recargarEpisodios(posicion);
                this.txtNombreEpisodio.setText("");
            }
            else{
                JOptionPane.showMessageDialog(null, "Este episodio ya existe","Error opcion",JOptionPane.WARNING_MESSAGE);                
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Los campos son obligatorios","Error opcion",JOptionPane.ERROR_MESSAGE);            
        }
    }//GEN-LAST:event_btnRegistrarEpisodioActionPerformed

    private void cboxSuperheroeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxSuperheroeActionPerformed
        if(this.cboxSuperheroe.getSelectedIndex()!=0){
            this.cboxVillano.setEnabled(true);
            this.cboxVillano.removeAllItems();
            this.cboxVillano.addItem("Seleccionar");
            for(Heroe heroe:listSuperHeroes){
                if(heroe.getVillanos()!=null && heroe.getVillanos().size()>0){
                    for(Villano rival:heroe.getVillanos()){
                        cboxVillano.addItem(rival.getNombre());
                    }
                }
            }
        }
        else{
            this.cboxVillano.setEnabled(true);
            this.cboxVillano.removeAllItems();
            this.cboxVillano.addItem("Seleccionar");
        }
    }//GEN-LAST:event_cboxSuperheroeActionPerformed

    private void btnAgregarPersonajesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPersonajesActionPerformed
        int posicion;
        if(this.cboxSuperheroe.getSelectedIndex()!=0 && this.cboxVillano.getSelectedIndex()!=0){
            posicion = this.cboxListaSeries.getSelectedIndex()-1;
            Serie serieSeleccionada = manipulador.getSeries().get(posicion);
            
            ArrayList<Personaje> participantes = new ArrayList();
            
            Heroe datoHeroe;
            Villano datoVillano;
            
            int posicionHeroe = this.cboxSuperheroe.getSelectedIndex()-1;
            int posicionVillano = this.cboxVillano.getSelectedIndex()-1;  
            
            datoHeroe = (Heroe)this.listSuperHeroes.get(posicionHeroe);
            datoVillano = (Villano)this.listSuperHeroes.get(posicionHeroe).getVillanos().get(posicionVillano);
            datoHeroe.setVillanos(new ArrayList <>());
            datoHeroe.agregarVillano(datoVillano);
            
            participantes.add(datoHeroe);
            participantes.add(datoVillano);
            
            int posicionEpisodio = this.cboxEpisodiosAgregarPersonaje.getSelectedIndex();
            for(Personaje persona:serieSeleccionada.getEpisodios().get(posicionEpisodio).getPersonajesbby()){
                participantes.add(persona);
            }
            serieSeleccionada.getEpisodios().get(posicionEpisodio).setPersonajes(participantes);
            manipulador.getSeries().get(posicion).getEpisodios().get(posicionEpisodio).setPersonajes(participantes);
            escribirArchivoSeries();
            JOptionPane.showMessageDialog(null, "Personajes agregados a la serie","",JOptionPane.INFORMATION_MESSAGE);
            actualizarTxtPersonajesEnEpisodio(manipulador.getSeries().get(posicion).getEpisodios().get(posicionEpisodio));
        }
        
    }//GEN-LAST:event_btnAgregarPersonajesActionPerformed

    private void cboxVillanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxVillanoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxVillanoActionPerformed

    private void cboxEpisodiosAgregarPersonajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxEpisodiosAgregarPersonajeActionPerformed
        int posicion = this.cboxListaSeries.getSelectedIndex()-1;
        int posicionEpisodio = this.cboxEpisodiosAgregarPersonaje.getSelectedIndex()-1;
        if(posicionEpisodio>=0){
            Episodio episodio = manipulador.getSeries().get(posicion).getEpisodios().get(posicionEpisodio);
            actualizarTxtPersonajesEnEpisodio(episodio);
        }
            
    }//GEN-LAST:event_cboxEpisodiosAgregarPersonajeActionPerformed

    private void escribirArchivoSeries(){
        EscribirManipulaPro escribir = new EscribirManipulaPro();
        escribir.abrirArchivo();
        escribir.escribirObjeto(manipulador);
        escribir.cerrarArchivo();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarEpisodio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarEpisodio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarEpisodio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarEpisodio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarEpisodio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarPersonajes;
    private javax.swing.JButton btnRegistrarEpisodio;
    private javax.swing.JComboBox<String> cboxEpisodiosAgregarPersonaje;
    private javax.swing.JComboBox<String> cboxListaSeries;
    private javax.swing.JComboBox<String> cboxSuperheroe;
    private javax.swing.JComboBox<String> cboxVillano;
    public javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<String> listEpisodiosEnSerie;
    private javax.swing.JTextField txtNombreEpisodio;
    private javax.swing.JTextArea txtPersonajesEnEpisodio;
    // End of variables declaration//GEN-END:variables

    private void recargarEpisodios(int posicion){
        ArrayList <String> datos = new ArrayList<>();
        Serie serieSeleccionada = manipulador.getSeries().get(posicion);
        if(serieSeleccionada.getEpisodios()!=null){
            for(Episodio episodio: serieSeleccionada.getEpisodios()){
                datos.add(episodio.getNombreEpisodio()+"\n");
            }
            DefaultListModel listModel = new DefaultListModel();
            for (int i = 0; i < datos.size(); i++)
            {
                listModel.addElement(datos.get(i));
            }
            this.listEpisodiosEnSerie.setModel(listModel);           
        }            
    }
    
    private void llenarComboBoxCargarPersonajes(int posicion){        
        this.cboxEpisodiosAgregarPersonaje.removeAllItems();
        this.cboxEpisodiosAgregarPersonaje.addItem("Seleccionar");
        Serie serieSeleccionada = manipulador.getSeries().get(posicion);
        if(serieSeleccionada.getEpisodios()!=null){
            for(Episodio episodio: serieSeleccionada.getEpisodios()){
                this.cboxEpisodiosAgregarPersonaje.addItem(episodio.getNombreEpisodio());
            }
        }            
        
    }
    
    private void actualizarTxtPersonajesEnEpisodio(Episodio episodio){
        StringBuilder textoSalida = new StringBuilder();
        for(Personaje persona: episodio.getPersonajesbby()){
            textoSalida.append(persona.getNombre()).append("\n");
        }
        this.txtPersonajesEnEpisodio.setText(textoSalida.toString());
    }
}
